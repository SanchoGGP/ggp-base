
;;;; 15-puzzle

(role player)

;;;; base & input propositions

(<= (base (cell ?m ?n ?t)) (index ?m) (index ?n) (tile ?t))
(<= (base (step ?x)) (successor ?y ?x))
(base (step 0))

(index 1)
(index 2)
(index 3)
(index 4)

(tile 1)
(tile 2)
(tile 3)
(tile 4)
(tile 5)
(tile 6)
(tile 7)
(tile 8)
(tile 9)
(tile 10)
(tile 11)
(tile 12)
(tile 13)
(tile 14)
(tile 15)
(tile b)

(<= (input player (move ?m ?n)) (index ?m) (index ?n))

;;;; initial state

(init (cell 1 1 5))
(init (cell 1 2 7))
(init (cell 1 3 1))
(init (cell 1 4 4))
(init (cell 2 1 9))
(init (cell 2 2 13))
(init (cell 2 3 2))
(init (cell 2 4 8))
(init (cell 3 1 11))
(init (cell 3 2 b))
(init (cell 3 3 6))
(init (cell 3 4 12))
(init (cell 4 1 10))
(init (cell 4 2 15))
(init (cell 4 3 3))
(init (cell 4 4 14))
(init (step 0))

;;;; adjacency

(succ 1 2)
(succ 2 3)
(succ 3 4)
(pred 2 1)
(pred 3 2)
(pred 4 3)

;;;; legal moves: e.g.: move(2,2) means move the blank square to 2,2 from whereever it is.
;;;; this will only be legal if it was in a square adjacent to the square picked

(<= (legal player (move ?x ?y))
    (true (cell ?u ?y b))
    (or (succ ?x ?u) (pred ?x ?u)))

(<= (legal player (move ?x ?y))
    (true (cell ?x ?v b))
    (or (succ ?y ?v) (pred ?y ?v)))

;;;; next states

(<= (next (step ?x))
    (true (step ?y))
    (successor ?y ?x))
(<= (next (cell ?x ?y b))
    (does player (move ?x ?y)))

(<= (next (cell ?u ?y ?z))
    (does player (move ?x ?y))
    (true (cell ?u ?y b))
    (true (cell ?x ?y ?z))
    (distinct ?z b))

(<= (next (cell ?x ?v ?z))
    (does player (move ?x ?y))
    (true (cell ?x ?v b))
    (true (cell ?x ?y ?z))
    (distinct ?z b))

(<= (next (cell ?u ?v ?z))
    (true (cell ?u ?v ?z))
    (does player (move ?x ?y))
    (or (distinct ?x ?u) (distinct ?y ?v))
    (true (cell ?x1 ?y1 b))
    (or (distinct ?x1 ?u) (distinct ?y1 ?v)))

;;;; goal and terminal

(<= (goal player 100)
    inorder
    (true (step 80)))

(<= (goal player 99)
    inorder
    (true (step ?x))
    (distinct ?x 80))

(<= (goal player 0)
    (not inorder))

(<= terminal inorder)
(<= terminal
    (true (step 160)))

(<= inorder
    (true (cell 1 1 1))
    (true (cell 1 2 2))
    (true (cell 1 3 3))
    (true (cell 1 4 4))
    (true (cell 2 1 5))
    (true (cell 2 2 6))
    (true (cell 2 3 7))
    (true (cell 2 4 8))
    (true (cell 3 1 9))
    (true (cell 3 2 10))
    (true (cell 3 3 11))
    (true (cell 3 4 12))
    (true (cell 4 1 13))
    (true (cell 4 2 14))
    (true (cell 4 3 15))
    (true (cell 4 4 b)))

;;; Step counting
  (successor 0 1)
  (successor 1 2)
  (successor 2 3)
  (successor 3 4)
  (successor 4 5)
  (successor 5 6)
  (successor 6 7)
  (successor 7 8)
  (successor 8 9)
  (successor 9 10)
  (successor 10 11)
  (successor 11 12)
  (successor 12 13)
  (successor 13 14)
  (successor 14 15)
  (successor 15 16)
  (successor 16 17)
  (successor 17 18)
  (successor 18 19)
  (successor 19 20)
  (successor 20 21)
  (successor 21 22)
  (successor 22 23)
  (successor 23 24)
  (successor 24 25)
  (successor 25 26)
  (successor 26 27)
  (successor 27 28)
  (successor 28 29)
  (successor 29 30)
  (successor 30 31)
  (successor 31 32)
  (successor 32 33)
  (successor 33 34)
  (successor 34 35)
  (successor 35 36)
  (successor 36 37)
  (successor 37 38)
  (successor 38 39)
  (successor 39 40)
  (successor 40 41)
  (successor 41 42)
  (successor 42 43)
  (successor 43 44)
  (successor 44 45)
  (successor 45 46)
  (successor 46 47)
  (successor 47 48)
  (successor 48 49)
  (successor 49 50)
  (successor 50 51)
  (successor 51 52)
  (successor 52 53)
  (successor 53 54)
  (successor 54 55)
  (successor 55 56)
  (successor 56 57)
  (successor 57 58)
  (successor 58 59)
  (successor 59 60)
  (successor 60 61)
  (successor 61 62)
  (successor 62 63)
  (successor 63 64)
  (successor 64 65)
  (successor 65 66)
  (successor 66 67)
  (successor 67 68)
  (successor 68 69)
  (successor 69 70)
  (successor 70 71)
  (successor 71 72)
  (successor 72 73)
  (successor 73 74)
  (successor 74 75)
  (successor 75 76)
  (successor 76 77)
  (successor 77 78)
  (successor 78 79)
  (successor 79 80)
  (successor 80 81)
  (successor 81 82)
  (successor 82 83)
  (successor 83 84)
  (successor 84 85)
  (successor 85 86)
  (successor 86 87)
  (successor 87 88)
  (successor 88 89)
  (successor 89 90)
  (successor 90 91)
  (successor 91 92)
  (successor 92 93)
  (successor 93 94)
  (successor 94 95)
  (successor 95 96)
  (successor 96 97)
  (successor 97 98)
  (successor 98 99)
  (successor 99 100)
  (successor 100 101)
  (successor 101 102)
  (successor 102 103)
  (successor 103 104)
  (successor 104 105)
  (successor 105 106)
  (successor 106 107)
  (successor 107 108)
  (successor 108 109)
  (successor 109 110)
  (successor 110 111)
  (successor 111 112)
  (successor 112 113)
  (successor 113 114)
  (successor 114 115)
  (successor 115 116)
  (successor 116 117)
  (successor 117 118)
  (successor 118 119)
  (successor 119 120)
  (successor 120 121)
  (successor 121 122)
  (successor 122 123)
  (successor 123 124)
  (successor 124 125)
  (successor 125 126)
  (successor 126 127)
  (successor 127 128)
  (successor 128 129)
  (successor 129 130)
  (successor 130 131)
  (successor 131 132)
  (successor 132 133)
  (successor 133 134)
  (successor 134 135)
  (successor 135 136)
  (successor 136 137)
  (successor 137 138)
  (successor 138 139)
  (successor 139 140)
  (successor 140 141)
  (successor 141 142)
  (successor 142 143)
  (successor 143 144)
  (successor 144 145)
  (successor 145 146)
  (successor 146 147)
  (successor 147 148)
  (successor 148 149)
  (successor 149 150)
  (successor 150 151)
  (successor 151 152)
  (successor 152 153)
  (successor 153 154)
  (successor 154 155)
  (successor 155 156)
  (successor 156 157)
  (successor 157 158)
  (successor 158 159)
  (successor 159 160)
